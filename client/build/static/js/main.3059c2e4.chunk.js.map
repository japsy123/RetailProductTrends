{"version":3,"sources":["components/selectors/Product.selectors.ts","components/ProductSideDetails/ProductSideDetails.tsx","components/ProductSideDetails/ProductSideDetails.styles.ts","components/RetailSales/RetailSales.tsx","components/RetailSales/RetailSales.styles.ts","store/actions.ts","stackline.svg","components/RetailDashboard/RetailDashboard.tsx","components/RetailDashboard/RetailDashboard.styles.ts","store/sagas.js","store/reducers.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["productSideDetails","createSelector","state","productInfo","product","tags","image","subtitle","title","ProductSideDetails","productData","useSelector","styles","sidePanel","root","width","height","margin","paddingTop","border","backgroundColor","boxShadow","alignItems","info","justifyContent","fontSize","fontWeight","tagsContainer","borderTop","borderBottom","padding","flexWrap","subInfo","textAlign","color","tag","borderRadius","marginRight","marginBottom","panelToken","useRef","childrenGap","Stack","tokens","current","src","style","alt","Text","horizontal","length","map","id","RetailSales","monthNames","salesContainer","header","retailSales","sales","LineChart","data","top","right","left","bottom","XAxis","tickCount","tickLine","dataKey","fill","fontFamily","lineHeight","stroke","strokeWidth","tickFormatter","str","date","parseISO","getDate","month","getMonth","Line","type","dot","LOAD_PRODUCT_DETAILS","SET_PRODUCT_DETAILS","RetailDashboard","dispatch","useDispatch","dashboardContainer","navbar","loading","isLoading","useEffect","stackline","productLoadAsync","watchProductDetailsLoad","rootSaga","fetchProductDetails","fetch","then","res","json","call","response","put","payload","takeEvery","spawn","initialState","brand","details","retailer","reviews","sagaMiddleware","createSagaMiddleware","store","createStore","action","applyMiddleware","run","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3059c2e4.chunk.js","sourcesContent":["import { createSelector } from \"reselect\";\r\nimport { IProductInfo, IProductState } from \"../../store/reducers\";\r\n\r\nexport interface IProductSideDetails {\r\n  tags: [];\r\n  image: string;\r\n  subtitle: string;\r\n  title: string;\r\n}\r\n\r\nexport const productSideDetails = createSelector<\r\n  IProductState,\r\n  IProductInfo,\r\n  IProductSideDetails\r\n>(\r\n  (state) => state.productInfo[0],\r\n  function (product) {\r\n    return {\r\n      tags: product.tags,\r\n      image: product.image,\r\n      subtitle: product.subtitle,\r\n      title: product.title,\r\n    };\r\n  }\r\n);\r\n","import { IStackTokens, Stack, Text } from \"@fluentui/react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { productSideStyles } from \"./ProductSideDetails.styles\";\r\nimport { productSideDetails } from \"../selectors/Product.selectors\";\r\nimport { useRef } from \"react\";\r\n\r\nfunction ProductSideDetails(): JSX.Element {\r\n  const productData = useSelector(productSideDetails);\r\n  const styles = productSideStyles();\r\n  const panelToken = useRef({ childrenGap: 10 } as IStackTokens);\r\n\r\n  const renderTags = (): JSX.Element => {\r\n      return  <Stack horizontal styles={styles.tagsContainer}>\r\n      {productData.tags.length &&\r\n        productData.tags.map((tag: string, id: number) => (\r\n          <Stack styles={styles.tag} key={id}>\r\n            {tag}{\" \"}\r\n          </Stack>\r\n        ))}\r\n    </Stack>\r\n  }\r\n\r\n  const renderComponent = (): JSX.Element => {\r\n    return (\r\n      <Stack styles={styles.sidePanel} tokens={panelToken.current}>\r\n        <img\r\n          src={productData.image}\r\n          style={{ height: \"120px\" }}\r\n          alt='SharkNinja'></img>\r\n        <Stack styles={styles.info}>\r\n          <Text>{productData.title}</Text>\r\n          <Stack styles={styles.subInfo}>{productData.subtitle}</Stack>\r\n        </Stack>\r\n        {renderTags()}\r\n      </Stack>\r\n    );\r\n  };\r\n\r\n  return renderComponent();\r\n}\r\n\r\nexport default ProductSideDetails;\r\n","import { IStackStyles } from \"@fluentui/react\";\r\n\r\nexport interface IProductSideDetails {\r\n  sidePanel: IStackStyles;\r\n  tagsContainer: IStackStyles;\r\n  info: IStackStyles;\r\n  subInfo: IStackStyles;\r\n  tag: IStackStyles;\r\n}\r\n\r\nexport const productSideStyles = (): IProductSideDetails => {\r\n  return {\r\n    sidePanel: {\r\n      root: {\r\n        width: \"30vw\",\r\n        height: \"80vh\",\r\n        margin: \"15px\",\r\n        paddingTop: \"15px\",\r\n        border: \"1px solid white\",\r\n        backgroundColor: \"white\",\r\n        boxShadow:\r\n          \"rgb(0 0 0 / 13%) 0px 1.6px 3.6px 0px, rgb(0 0 0 / 11%) 0px 0.3px 0.9px 0px\",\r\n        alignItems: \"center\",\r\n      },\r\n    },\r\n    info: {\r\n      root: {\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        \"span:first-child\": {\r\n          fontSize: \"16px\",\r\n          fontWeight: \"800\",\r\n        },\r\n      },\r\n    },\r\n    tagsContainer: {\r\n      root: {\r\n        borderTop: \"1px solid #e1dfdd\",\r\n        borderBottom: \"1px solid #e1dfdd\",\r\n        padding: \"10px\",\r\n        height: \"auto\",\r\n        width: \"100%\",\r\n        flexWrap: \"wrap\",\r\n      },\r\n    },\r\n    subInfo: {\r\n      root: {\r\n        padding: \"5px\",\r\n        textAlign: \"center\",\r\n        color: \"#bebbb8\",\r\n        fontWeight: 600,\r\n        width: \"200px\",\r\n        fontSize: \"12px\",\r\n      },\r\n    },\r\n    tag: {\r\n        root: {\r\n          border: \"1px solid #e1dfdd\",\r\n          borderRadius: \"3px\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n          padding: \"10px\",\r\n          height: \"25px\",\r\n          fontSize: \"12px\",\r\n          marginRight: \"10px\",\r\n          marginBottom: \"6px\",\r\n        },\r\n      },\r\n  };\r\n};\r\n","import { Stack, Text } from \"@fluentui/react\";\r\nimport { Line, LineChart, XAxis } from \"recharts\";\r\nimport { retailSalesStyles } from \"./RetailSales.styles\";\r\nimport { IProductState } from \"../../store/reducers\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { parseISO } from \"date-fns\";\r\n\r\nfunction RetailSales(): JSX.Element {\r\n  const monthNames = [\r\n    \"JAN\",\r\n    \"FEB\",\r\n    \"MAR\",\r\n    \"APR\",\r\n    \"MAY\",\r\n    \"JUN\",\r\n    \"JUL\",\r\n    \"AUG\",\r\n    \"SEP\",\r\n    \"OCT\",\r\n    \"NOV\",\r\n    \"DEC\",\r\n  ];\r\n\r\n  const styles = retailSalesStyles();\r\n  const retailSales = useSelector(\r\n    (state: IProductState) => state.productInfo[0].sales\r\n  );\r\n\r\n  const renderRetailGraph = () => {\r\n      return  <LineChart\r\n      width={1600}\r\n      height={500}\r\n      data={retailSales}\r\n      margin={{\r\n        top: 5,\r\n        right: 30,\r\n        left: 20,\r\n        bottom: 5,\r\n      }}>\r\n      <XAxis\r\n        tickCount={10}\r\n        tickLine={false}\r\n        dataKey='weekEnding'\r\n        style={{\r\n          fill: \"#BCBCBC\",\r\n          fontSize: \"16px\",\r\n          fontFamily: \"Segoe UI\",\r\n          fontWeight: 400,\r\n          lineHeight: \"18px\",\r\n          stroke: \"#BCBCBC\",\r\n          strokeWidth: 0.5,\r\n        }}\r\n        tickFormatter={(str) => {\r\n          const date = parseISO(str);\r\n          // check if the date is for the first week\r\n          if (date.getDate() <= 7) {\r\n            const month = date.getMonth();\r\n            return monthNames[month];\r\n          }\r\n          return \"\";\r\n        }}\r\n      />\r\n      <Line\r\n        type='monotone'\r\n        strokeWidth={5}\r\n        dataKey='retailerMargin'\r\n        stroke='#0078d4'\r\n        dot={false}\r\n      />\r\n      <Line\r\n        strokeWidth={5}\r\n        type='monotone'\r\n        dataKey='retailSales'\r\n        stroke='#69797e'\r\n        dot={false}\r\n      />\r\n    </LineChart>\r\n  }\r\n\r\n  return retailSales.length ? (\r\n    <Stack styles={styles.salesContainer}>\r\n      <Text styles={styles.header}>Retail Sales</Text>\r\n      {renderRetailGraph()}\r\n    </Stack>\r\n  ) : (\r\n    <></>\r\n  );\r\n}\r\n\r\nexport default RetailSales;\r\n","import { IStackStyles, ITextStyles } from \"@fluentui/react\";\r\n\r\nexport interface IRetailSalesStyles {\r\n  salesContainer: IStackStyles;\r\n  header: ITextStyles;\r\n}\r\n\r\nexport const retailSalesStyles = (): IRetailSalesStyles => {\r\n  return {\r\n    salesContainer: {\r\n      root: {\r\n        width: \"auto\",\r\n        margin: \"15px\",\r\n        height: \"600px\",\r\n        border: \"1px solid white\",\r\n        backgroundColor: \"white\",\r\n        boxShadow:\r\n          \"rgb(0 0 0 / 13%) 0px 1.6px 3.6px 0px, rgb(0 0 0 / 11%) 0px 0.3px 0.9px 0px\",\r\n      },\r\n    },\r\n    header: {\r\n      root: {\r\n        fontSize: \"20px\",\r\n        padding: \"15px\",\r\n        marginBottom: \"30px\",\r\n        fontWeight: \"400\",\r\n      },\r\n    },\r\n  };\r\n};\r\n","export const LOAD_PRODUCT_DETAILS = \"LOAD_PRODUCT_DETAILS\";\r\nexport const SET_PRODUCT_DETAILS = \"LOAD_PRODUCT_DETAILS_SUCCESS\";\r\n\r\nexport interface IProductAction {\r\n    type: string;\r\n    id: string;\r\n    payload: {\r\n      productInfo: [\r\n        {\r\n          brand: string;\r\n          details: [];\r\n          id: string;\r\n          image: string;\r\n          retailer: string;\r\n          reviews: [];\r\n          sales: [];\r\n          subtitle: string;\r\n          tags: [];\r\n          title: string;\r\n        }\r\n      ];\r\n    };\r\n  }","export default __webpack_public_path__ + \"static/media/stackline.5935081b.svg\";","import ProductSideDetails from \"../ProductSideDetails/ProductSideDetails\";\r\nimport RetailSales from \"../RetailSales/RetailSales\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { LOAD_PRODUCT_DETAILS } from \"../../store/actions\";\r\nimport { Stack } from \"@fluentui/react\";\r\nimport { dashboardStyles } from \"./RetailDashboard.styles\";\r\nimport stackline from \"../../stackline.svg\";\r\nimport { IProductState } from \"../../store/reducers\";\r\n\r\nfunction RetailDashboard(): JSX.Element {\r\n  const dispatch = useDispatch();\r\n  const styles = dashboardStyles();\r\n  const isLoading = useSelector((state: IProductState) => state.loading);\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: LOAD_PRODUCT_DETAILS });\r\n  }, [dispatch]);\r\n\r\n  const renderDashboard = () => {\r\n    return isLoading ? (\r\n      <Stack styles={styles.loading}>Loading...</Stack>\r\n    ) : (\r\n      <Stack styles={styles.dashboardContainer}>\r\n        <Stack styles={styles.navbar} horizontal>\r\n          <img style={{ height: \"20px\" }} src={stackline} alt='StacklineLogo' />\r\n        </Stack>\r\n        <Stack horizontal>\r\n          <ProductSideDetails />\r\n          <RetailSales />\r\n        </Stack>\r\n      </Stack>\r\n    );\r\n  };\r\n\r\n  return renderDashboard();\r\n}\r\n\r\nexport default RetailDashboard;\r\n","import { IStackStyles } from \"@fluentui/react\";\r\n\r\nexport interface IRetailDashboardStyles {\r\n  dashboardContainer: IStackStyles;\r\n  navbar: IStackStyles;\r\n  loading: IStackStyles;\r\n}\r\n\r\nexport const dashboardStyles = (): IRetailDashboardStyles => {\r\n  return {\r\n    dashboardContainer: {\r\n      root: {\r\n        backgroundColor: \"#faf9f8\",\r\n        width: \"100vw\",\r\n        height: \"100vh\",\r\n      },\r\n    },\r\n    navbar: {\r\n      root: {\r\n        backgroundColor: \"rgb(0, 20, 51)\",\r\n        width: \"100%\",\r\n        height: \"50px\",\r\n        padding: \"10px\",\r\n        marginBottom: \"25px\",\r\n      },\r\n    },\r\n    loading: {\r\n      root: {\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        width: \"100vw\",\r\n        height: \"100vh\",\r\n        fontSize: \"30px\",\r\n        backgroundColor: \"#c7e0f4\",\r\n      },\r\n    },\r\n  };\r\n};\r\n","import { LOAD_PRODUCT_DETAILS, SET_PRODUCT_DETAILS } from \"./actions\";\r\nimport { takeEvery, put, spawn, call } from \"redux-saga/effects\";\r\n\r\nfunction fetchProductDetails() {\r\n  return fetch(\"/product\").then((res) => res.json());\r\n}\r\n\r\nfunction* productLoadAsync() {\r\n  const response = yield call(fetchProductDetails);\r\n  yield put({\r\n    type: SET_PRODUCT_DETAILS,\r\n    payload: {\r\n      productInfo: response,\r\n    },\r\n  });\r\n}\r\n\r\nexport function* watchProductDetailsLoad() {\r\n  yield takeEvery(LOAD_PRODUCT_DETAILS, productLoadAsync);\r\n}\r\n\r\nexport default function* rootSaga() {\r\n  yield spawn(watchProductDetailsLoad);\r\n}\r\n","import { IProductAction, SET_PRODUCT_DETAILS } from \"./actions\";\r\n\r\nexport interface IProductInfo {\r\n  brand: string;\r\n  details: [];\r\n  id: string;\r\n  image: string;\r\n  retailer: string;\r\n  reviews: [];\r\n  sales: [];\r\n  subtitle: string;\r\n  tags: [];\r\n  title: string;\r\n}\r\nexport interface IProductState {\r\n  productInfo: [\r\n    {\r\n      brand: string;\r\n      details: [];\r\n      id: string;\r\n      image: string;\r\n      retailer: string;\r\n      reviews: [];\r\n      sales: [];\r\n      subtitle: string;\r\n      tags: [];\r\n      title: string;\r\n    }\r\n  ];\r\n  loading: boolean;\r\n}\r\n\r\nexport const initialState: IProductState = {\r\n  productInfo: [\r\n    {\r\n      brand: \"\",\r\n      details: [],\r\n      id: \"\",\r\n      image: \"\",\r\n      retailer: \"\",\r\n      reviews: [],\r\n      sales: [],\r\n      subtitle: \"\",\r\n      tags: [],\r\n      title: \"\",\r\n    },\r\n  ],\r\n  loading: true,\r\n};\r\n\r\nexport function productsReducer(\r\n  state: IProductState = initialState,\r\n  action: IProductAction\r\n) {\r\n  switch (action.type) {\r\n    case SET_PRODUCT_DETAILS:\r\n      return {\r\n        loading: false,\r\n        productInfo: action.payload.productInfo\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import RetailDashboard from './components/RetailDashboard/RetailDashboard';\nimport {createStore, applyMiddleware } from 'redux';\nimport {Provider} from 'react-redux'\nimport createSagaMiddleware from 'redux-saga'\nimport rootSaga from './store/sagas'\nimport { productsReducer } from './store/reducers';\n\nconst sagaMiddleware= createSagaMiddleware()\nconst store = createStore(productsReducer, applyMiddleware(sagaMiddleware))\nsagaMiddleware.run(rootSaga)\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <RetailDashboard/>\n    </Provider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}